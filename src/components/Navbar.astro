---
import { links } from "@/config/links";
import { Icon } from "astro-icon/components";
---

<nav>
  <div id="menuToggler" class="menu-toggle link">
    <div class="menu-rectangle"></div>
    <div class="menu-rectangle"></div>
    <div class="menu-rectangle"></div>
  </div>
  <a href="/" class="link" style="min-width: 56px; height:auto; padding: 8px;">
    <img src="/logo.svg" alt="Morax" height="32" />
  </a>
  <div class="links-wrapper">
    {
      links.nav.map((link) => (
        <a class="link" href={link.href}>
          /{link.name}
        </a>
      ))
    }
  </div>

  <div>
    <div id="themeToggler" class="link">
      <Icon name="moon" width="1.3em" height="1.3em" />
    </div>
  </div>
</nav>

<!-- Floating mobile menu -->
<div class="mobile-menu">
  {
    links.nav.map((link) => (
      <a class="link" href={link.href}>
        /{link.name}
      </a>
    ))
  }
</div>

<style>
  nav {
    background-color: var(--card-background-color);
    margin-inline: auto;
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 1rem;
    border-bottom-right-radius: var(--border-rounded);
    border-bottom-left-radius: var(--border-rounded);
    height: 4.5rem;
    padding: 0 1rem;
  }

  .links-wrapper {
    display: flex;
    justify-content: space-between;
    padding-right: 2.5rem;
    gap: 0.5rem;
  }

  .link {
    color: var(--color);
    font-weight: bold;
    transition: all 0.1s ease-in;
    border-radius: var(--border-rounded);
    user-select: none;
    font-size: medium;
    padding: 0.75rem 1rem;
    height: 100%;
    text-decoration: none;
  }

  .link.active {
    color: var(--primary-color);
  }

  .link svg {
    border-radius: 50%;
  }

  .link:hover {
    background-color: var(--secondary-background-color);
    color: var(--primary-color);
  }

  .link:active {
    scale: 0.95;
    background-color: var(--accent-color);
  }

  .menu-toggle {
    display: none;
  }

  .mobile-menu {
    display: none;
    flex-direction: column;
    background: var(--card-background-color);
    padding: 1rem;
    gap: 0.5rem;
    border-radius: var(--border-rounded);
    margin: 0 0 1rem;
  }

  .mobile-menu.open {
    display: flex;
  }

  @media (max-width: 56rem) {
    nav {
      direction: rtl;
    }

    .links-wrapper {
      display: none;
    }

    .menu-toggle {
      display: flex;
      margin: 1rem 0;
      flex-direction: column;
      height: fit-content;
      gap: 0.3rem;
    }

    .menu-rectangle {
      display: block;
      background-color: var(--color);
      height: 0.2rem;
      width: 2rem;
      border-radius: 8px;
      transition: all 0.1s ease-in;
    }

    .menu-toggle:hover {
      .menu-rectangle {
        background-color: var(--primary-color);
      }
    }

    .mobile-menu {
      display: none;
    }
  }
</style>

<script>
  // Active link highlighting
  // --- Start---
  const path = stripSlash(window.location.pathname);
  const links = document.querySelectorAll<HTMLAnchorElement>(".link");
    
    function stripSlash(path: string) {
      if (!path) return "";
      return path !== "/" && path.endsWith("/") ? path.slice(0, -1) : path;
    }
    
    function setActiveLink(activePath: string, links: NodeListOf<Element>) {
      const normalized = stripSlash(activePath);
      links.forEach((link) => {
        const href = stripSlash(link.getAttribute("href") || "");
        if (href === normalized) {
          link.classList.add("active");
        } else {
          link.classList.remove("active");
        }
      });
  }

  setActiveLink(path, links);
  
  links.forEach((link) => {
    link.addEventListener("click", (e) => {
      if (link.classList.contains("active")) e.preventDefault();
      
      const href = link.getAttribute("href");
      if (href) setActiveLink(href, links);
    });
  });
  // --- End ---
  
  // Mobile menu stuff
  // --- Start---
  const menuToggle = document.getElementById("menuToggler");
  const mobileMenu = document.querySelector(".mobile-menu"); 
  
  if (menuToggle && mobileMenu) {
    menuToggle.addEventListener("click", () => mobileMenu.classList.toggle("open"));
    
    mobileMenu
    .querySelectorAll("a")
    .forEach((a) => a.addEventListener("click", () => mobileMenu.classList.remove("open")));
  } else {
    console.warn("menuToggler or .mobile-menu missing", { menuToggle, mobileMenu });
  }
  // --- End ---
</script>
