---
import { links } from "@/config/links";
import { Icon } from "astro-icon/components";
---

<nav>
  <a href="/" style="min-width: 64px;">
    <img src="/logo.svg" alt="Morax" height="32" />
  </a>
  <div class="links-wrapper">
    {
      links.nav.map((link) => (
        <a class="link" href={link.href}>
          /{link.name}
        </a>
      ))
    }
  </div>

  <div>
    <div id="themeToggler" class="link">
      <Icon name="moon" />
    </div>
  </div>
</nav>

<style>
  nav {
    background-color: var(--card-background-color);
    margin-inline: auto;
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 1rem;
    border-bottom-right-radius: var(--border-rounded);
    border-bottom-left-radius: var(--border-rounded);
    height: 4.5rem;
    padding: 0 1rem;
  }

  .links-wrapper {
    display: flex;
    justify-content: space-between;
    padding-right: 2.5rem;
    gap: 0.5rem;
  }

  .link {
    color: var(--color);
    font-size: medium;
    font-weight: bold;
    text-decoration: none;
    padding: 0.75rem 1rem;
    user-select: none;
    height: 100%;
    border-radius: var(--border-rounded);
    transition: all 0.1s ease-in;
  }

  .link.active {
    color: var(--primary-color);
  }

  .link svg {
    border-radius: 50%;
  }

  .link:hover {
    background-color: var(--secondary-background-color);
    color: var(--primary-color);
  }

  .link:active {
    scale: 0.95;
    background-color: var(--accent-color);
  }
</style>

<script>
  // Active link highlighting
  // --- Start---
  const path = stripSlash(window.location.pathname);
  const links = document.querySelectorAll<HTMLAnchorElement>(".link");

  function stripSlash(path: string) {
    if (!path) return "";
    return path !== "/" && path.endsWith("/") ? path.slice(0, -1) : path;
  }

  function setActiveLink(activePath: string, links: NodeListOf<Element>) {
    const normalized = stripSlash(activePath);
    links.forEach((link) => {
      const href = stripSlash(link.getAttribute("href") || "");
      if (href === normalized) {
        link.classList.add("active");
      } else {
        link.classList.remove("active");
      }
    });
  }

  setActiveLink(path, links);

  links.forEach((link) => {
    link.addEventListener("click", () => {
      const href = link.getAttribute("href");
      if (href) setActiveLink(href, links);
    });
  });
  // --- End ---
</script>
