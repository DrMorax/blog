---
import Base from "@/layouts/Base.astro";
import { getCollection, type CollectionEntry } from "astro:content";
import HomeFeed from "../components/HomeFeed.astro";

type BlogEntry = CollectionEntry<"blog">;

export async function getStaticPaths() {
    const posts = await getCollection("blog", ({ data }) => !data.draft);
    const PAGE_SIZE = 5;
    const totalPages = Math.ceil(posts.length / PAGE_SIZE);

    return [
        { params: { page: undefined } },
        ...Array.from({ length: totalPages - 1 }, (_, i) => ({
            params: { page: String(i + 2) },
        })),
    ];
}

const pathSegment = Astro.url.pathname.split("/").filter(Boolean).at(-1);
const currentPage = Number(pathSegment) || 1;

const allPosts: BlogEntry[] = await getCollection("blog");
const published = allPosts.filter((p) => !p.data.draft);
const sorted = published.sort(
    (a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime(),
);

const PAGE_SIZE = 5;
const start = (currentPage - 1) * PAGE_SIZE;
const posts = sorted.slice(start, start + PAGE_SIZE);
// const total = Math.ceil(sorted.length / PAGE_SIZE);
---

<Base>
    <HomeFeed posts={posts} />
</Base>
